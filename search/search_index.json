{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Django Redis Panel","text":"<p>A Django Admin panel for browsing, inspecting, and managing Redis keys. No PostgreSQL/MySQL models or changes required.</p> <p></p>"},{"location":"#overview","title":"Overview","text":"<p>Django Redis Panel seamlessly integrates into your existing Django admin interface, providing a powerful tool for Redis database management without requiring any model definitions or database migrations.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>\ud83d\udd0d Browse Redis Keys: Search and filter Redis keys with pattern matching</li> <li>\ud83d\udcca Instance Overview: Monitor Redis instance metrics and database statistics  </li> <li>\ud83d\udd27 Key Management: View, edit, and delete Redis keys with support for all data types</li> <li>\ud83c\udf9b\ufe0f Feature Toggles: Granular control over operations (delete, edit, TTL updates)</li> <li>\ud83d\udcc4 Pagination: Both traditional page-based and cursor-based pagination support</li> <li>\ud83c\udfa8 Django Admin Integration: Seamless integration with Django admin styling and dark mode</li> <li>\ud83d\udd12 Permission Control: Respects Django admin permissions and staff-only access</li> <li>\ud83c\udf10 Multiple Instances: Support for multiple Redis instances with different configurations</li> </ul>"},{"location":"#supported-redis-data-types","title":"Supported Redis Data Types","text":"<ul> <li>String: View and edit string values</li> <li>List: Browse list items with pagination</li> <li>Set: View set members</li> <li>Hash: Display hash fields and values in a table format</li> <li>Sorted Set: Show sorted set members with scores</li> </ul>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>Python 3.9+</li> <li>Django 4.2+</li> <li>Redis 4.0+</li> <li>redis-py 4.0+</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License.</p>"},{"location":"#getting-help","title":"Getting Help","text":"<ul> <li>\ud83d\udcd6 Read the full documentation</li> <li>\ud83d\udc1b Report issues on GitHub</li> <li>\ud83d\udca1 Request features</li> </ul>"},{"location":"configuration/","title":"Configuration","text":"<p>This page covers all the configuration options available in Django Redis Panel.</p>"},{"location":"configuration/#basic-configuration","title":"Basic Configuration","text":"<p>Django Redis Panel is configured through the <code>DJ_REDIS_PANEL_SETTINGS</code> dictionary in your Django settings file.</p> <pre><code># settings.py\nDJ_REDIS_PANEL_SETTINGS = {\n# Global feature flags\n\"ALLOW_KEY_DELETE\": False,\n\"ALLOW_KEY_EDIT\": True,\n\"ALLOW_TTL_UPDATE\": True,\n\"CURSOR_PAGINATED_SCAN\": False,\n# Redis instances configuration\n\"INSTANCES\": {\n# ... instance configurations\n}\n}\n</code></pre>"},{"location":"configuration/#global-settings","title":"Global Settings","text":"<p>These settings apply to all Redis instances unless overridden at the instance level.</p> Setting Default Description <code>ALLOW_KEY_DELETE</code> <code>False</code> Allow deletion of Redis keys <code>ALLOW_KEY_EDIT</code> <code>True</code> Allow editing of key values <code>ALLOW_TTL_UPDATE</code> <code>True</code> Allow updating key TTL (expiration) <code>CURSOR_PAGINATED_SCAN</code> <code>False</code> Use cursor-based pagination instead of page-based"},{"location":"configuration/#feature-flags-details","title":"Feature Flags Details","text":""},{"location":"configuration/#allow_key_delete","title":"<code>ALLOW_KEY_DELETE</code>","text":"<p>Controls whether users can delete Redis keys through the interface.</p> <ul> <li><code>True</code>: Shows delete buttons and allows key deletion</li> <li><code>False</code>: Hides delete functionality (recommended for production)</li> </ul> <p>Production Safety</p> <p>It's recommended to set this to <code>False</code> in production environments to prevent accidental data loss.</p>"},{"location":"configuration/#allow_key_edit","title":"<code>ALLOW_KEY_EDIT</code>","text":"<p>Controls whether users can modify Redis key values.</p> <ul> <li><code>True</code>: Allows editing of key values</li> <li><code>False</code>: Makes the interface read-only for key values</li> </ul>"},{"location":"configuration/#allow_ttl_update","title":"<code>ALLOW_TTL_UPDATE</code>","text":"<p>Controls whether users can modify key expiration times.</p> <ul> <li><code>True</code>: Shows TTL controls and allows expiration updates</li> <li><code>False</code>: Hides TTL modification functionality</li> </ul>"},{"location":"configuration/#cursor_paginated_scan","title":"<code>CURSOR_PAGINATED_SCAN</code>","text":"<p>Controls the pagination method for browsing keys.</p> <ul> <li><code>True</code>: Uses Redis SCAN command with cursor-based pagination (more efficient for large datasets)</li> <li><code>False</code>: Uses traditional page-based pagination with KEYS command</li> </ul> <p>Performance</p> <p>Use cursor-based pagination (<code>True</code>) for Redis instances with many keys for better performance.</p>"},{"location":"configuration/#instance-configuration","title":"Instance Configuration","text":"<p>Each Redis instance is configured under the <code>INSTANCES</code> key. You can define multiple instances with different settings.</p>"},{"location":"configuration/#connection-methods","title":"Connection Methods","text":""},{"location":"configuration/#hostport-configuration","title":"Host/Port Configuration","text":"<pre><code>\"instance_name\": {\n\"description\": \"Human-readable description\",\n\"host\": \"127.0.0.1\",\n\"port\": 6379,\n\"password\": \"password\",     # Optional\n}\n</code></pre>"},{"location":"configuration/#url-configuration","title":"URL Configuration","text":"<pre><code>\"instance_name\": {\n\"description\": \"Human-readable description\", \n\"url\": \"redis://user:password@host:port/db\",\n}\n</code></pre>"},{"location":"configuration/#ssltls-configuration","title":"SSL/TLS Configuration","text":"<pre><code>\"secure_instance\": {\n\"description\": \"Secure Redis Instance\",\n\"url\": \"rediss://user:password@host:6380\",  # Note: rediss:// for SSL\n}\n</code></pre>"},{"location":"configuration/#per-instance-feature-overrides","title":"Per-Instance Feature Overrides","text":"<p>You can override global feature flags for individual instances:</p> <pre><code>\"instance_name\": {\n\"description\": \"Production Redis\",\n\"host\": \"prod-redis.example.com\",\n\"port\": 6379,\n\"features\": {\n\"ALLOW_KEY_DELETE\": False,      # Override global setting\n\"CURSOR_PAGINATED_SCAN\": True,  # Use cursor pagination for this instance\n},\n}\n</code></pre>"},{"location":"configuration/#complete-configuration-examples","title":"Complete Configuration Examples","text":""},{"location":"configuration/#development-environment","title":"Development Environment","text":"<pre><code>DJ_REDIS_PANEL_SETTINGS = {\n# Permissive settings for development\n\"ALLOW_KEY_DELETE\": True,\n\"ALLOW_KEY_EDIT\": True,\n\"ALLOW_TTL_UPDATE\": True,\n\"CURSOR_PAGINATED_SCAN\": False,\n\"INSTANCES\": {\n\"default\": {\n\"description\": \"Local Development Redis\",\n\"host\": \"127.0.0.1\",\n\"port\": 6379,\n},\n\"cache\": {\n\"description\": \"Local Cache Redis\",\n\"host\": \"127.0.0.1\",\n\"port\": 6379,\n},\n}\n}\n</code></pre>"},{"location":"configuration/#production-environment","title":"Production Environment","text":"<pre><code>DJ_REDIS_PANEL_SETTINGS = {\n# Restrictive settings for production\n\"ALLOW_KEY_DELETE\": False,\n\"ALLOW_KEY_EDIT\": False,\n\"ALLOW_TTL_UPDATE\": False,\n\"CURSOR_PAGINATED_SCAN\": True,\n\"INSTANCES\": {\n\"primary\": {\n\"description\": \"Primary Redis Cluster\",\n\"url\": \"rediss://user:password@redis-primary.example.com:6380/0\",\n},\n\"cache\": {\n\"description\": \"Cache Redis Instance\",\n\"url\": \"rediss://user:password@redis-cache.example.com:6380/0\",\n\"features\": {\n\"ALLOW_KEY_EDIT\": True,  # Allow cache key editing\n},\n},\n\"sessions\": {\n\"description\": \"Session Storage\",\n\"url\": \"rediss://user:password@redis-sessions.example.com:6380/0\",\n},\n}\n}\n</code></pre>"},{"location":"configuration/#mixed-environment-staging","title":"Mixed Environment (Staging)","text":"<pre><code>DJ_REDIS_PANEL_SETTINGS = {\n# Balanced settings for staging\n\"ALLOW_KEY_DELETE\": False,\n\"ALLOW_KEY_EDIT\": True,\n\"ALLOW_TTL_UPDATE\": True,\n\"CURSOR_PAGINATED_SCAN\": True,\n\"INSTANCES\": {\n\"staging\": {\n\"description\": \"Staging Redis\",\n\"host\": \"staging-redis.example.com\",\n\"port\": 6379,\n\"password\": \"staging-password\",\n},\n\"debug\": {\n\"description\": \"Debug Redis (Full Access)\",\n\"host\": \"127.0.0.1\",\n\"port\": 6379,\n\"features\": {\n\"ALLOW_KEY_DELETE\": True,  # Allow deletion for debugging\n},\n},\n}\n}\n</code></pre>"},{"location":"configuration/#environment-specific-configuration","title":"Environment-Specific Configuration","text":"<p>You can use different configurations based on your Django environment:</p> <pre><code># settings.py\nimport os\n# Base configuration\nDJ_REDIS_PANEL_SETTINGS = {\n\"ALLOW_KEY_EDIT\": True,\n\"ALLOW_TTL_UPDATE\": True,\n\"CURSOR_PAGINATED_SCAN\": True,\n\"INSTANCES\": {\n\"default\": {\n\"description\": \"Default Redis\",\n\"host\": os.getenv(\"REDIS_HOST\", \"127.0.0.1\"),\n\"port\": int(os.getenv(\"REDIS_PORT\", 6379)),\n\"password\": os.getenv(\"REDIS_PASSWORD\"),\n}\n}\n}\n# Environment-specific overrides\nif os.getenv(\"DJANGO_ENV\") == \"production\":\nDJ_REDIS_PANEL_SETTINGS[\"ALLOW_KEY_DELETE\"] = False\nDJ_REDIS_PANEL_SETTINGS[\"ALLOW_KEY_EDIT\"] = False\nelse:\nDJ_REDIS_PANEL_SETTINGS[\"ALLOW_KEY_DELETE\"] = True\n</code></pre>"},{"location":"configuration/#configuration-validation","title":"Configuration Validation","text":"<p>Django Redis Panel validates your configuration on startup. Common validation errors include:</p> <ul> <li>Missing INSTANCES: At least one Redis instance must be configured</li> <li>Invalid connection parameters: Host/port or URL must be provided</li> <li>Connection failures: Redis instances must be accessible</li> </ul>"},{"location":"configuration/#security-considerations","title":"Security Considerations","text":""},{"location":"configuration/#production-recommendations","title":"Production Recommendations","text":"<ol> <li> <p>Disable destructive operations:    <pre><code>\"ALLOW_KEY_DELETE\": False\n</code></pre></p> </li> <li> <p>Use read-only mode for sensitive data:    <pre><code>\"ALLOW_KEY_EDIT\": False\n</code></pre></p> </li> <li> <p>Use SSL/TLS connections:    <pre><code>\"url\": \"rediss://user:password@host:6380/0\"\n</code></pre></p> </li> <li> <p>Restrict admin access: Ensure only trusted staff users have admin access</p> </li> <li> <p>Use environment variables for sensitive data like passwords</p> </li> </ol>"},{"location":"configuration/#network-security","title":"Network Security","text":"<ul> <li>Use Redis AUTH when possible</li> <li>Restrict Redis server access to trusted networks</li> <li>Use SSL/TLS for connections over untrusted networks</li> <li>Consider using Redis ACLs for fine-grained access control</li> </ul>"},{"location":"configuration/#next-steps","title":"Next Steps","text":"<ul> <li>Quick Start Guide - Get started with your configured instances</li> <li>Features Overview - Learn about all available features</li> <li>Development Setup - Set up for local development</li> </ul>"},{"location":"development/","title":"Development Setup","text":"<p>This guide will help you set up Django Redis Panel for local development and contribution.</p>"},{"location":"development/#prerequisites","title":"Prerequisites","text":"<p>Before setting up the development environment, make sure you have:</p> <ul> <li>Python 3.9+: The minimum supported Python version</li> <li>Redis Server: A running Redis instance for testing</li> <li>Git: For version control</li> <li>Make: For using the included Makefile commands</li> </ul>"},{"location":"development/#system-dependencies","title":"System Dependencies","text":"macOSUbuntu/DebianCentOS/RHELDocker <pre><code># Install Python (if not already installed)\nbrew install python@3.11\n\n# Install Redis\nbrew install redis\n\n# Start Redis\nbrew services start redis\n</code></pre> <pre><code># Install Python and pip\nsudo apt update\nsudo apt install python3 python3-pip python3-venv\n\n# Install Redis\nsudo apt install redis-server\n\n# Start Redis\nsudo systemctl start redis-server\nsudo systemctl enable redis-server\n</code></pre> <pre><code># Install Python\nsudo dnf install python3 python3-pip\n\n# Install Redis\nsudo dnf install redis\n\n# Start Redis\nsudo systemctl start redis\nsudo systemctl enable redis\n</code></pre> <pre><code># Use the included docker-compose file\ndocker-compose up redis -d\n</code></pre>"},{"location":"development/#getting-the-source-code","title":"Getting the Source Code","text":""},{"location":"development/#1-fork-and-clone","title":"1. Fork and Clone","text":"<ol> <li> <p>Fork the repository on GitHub: yassi/dj-redis-panel</p> </li> <li> <p>Clone your fork:    <pre><code>git clone https://github.com/YOUR_USERNAME/dj-redis-panel.git\ncd dj-redis-panel\n</code></pre></p> </li> <li> <p>Add upstream remote:    <pre><code>git remote add upstream https://github.com/yassi/dj-redis-panel.git\n</code></pre></p> </li> </ol>"},{"location":"development/#2-create-virtual-environment","title":"2. Create Virtual Environment","text":"<pre><code># Create virtual environment\npython -m venv venv\n\n# Activate virtual environment\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n</code></pre>"},{"location":"development/#development-installation","title":"Development Installation","text":"<p>The project includes a Makefile with several useful commands for development.</p>"},{"location":"development/#quick-setup","title":"Quick Setup","text":"<pre><code># Install in development mode with all dependencies\nmake install_dev\n</code></pre> <p>This command will: - Build and install the package in development mode - Install all development dependencies (pytest, coverage, etc.) - Set up the package for local development</p>"},{"location":"development/#manual-setup","title":"Manual Setup","text":"<p>If you prefer manual installation:</p> <pre><code># Install development dependencies\npip install -e \".[dev]\"\n# Or install from requirements\npip install -r requirements.txt\n</code></pre>"},{"location":"development/#available-make-commands","title":"Available Make Commands","text":"<pre><code># Build and install the package\nmake install\n\n# Install in development mode with dev dependencies\nmake install_dev\n\n# Run all tests\nmake test\n# Run tests with coverage\nmake test-coverage\n\n# Clean build artifacts\nmake clean\n\n# Build distribution packages\nmake build\n\n# Upload to PyPI (maintainers only)\nmake upload\n\n# Serve documentation locally\nmake docs-serve\n</code></pre>"},{"location":"development/#project-structure","title":"Project Structure","text":"<p>Understanding the project layout:</p> <pre><code>dj-redis-panel/\n\u251c\u2500\u2500 dj_redis_panel/          # Main package\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 admin.py             # Django admin integration\n\u2502   \u251c\u2500\u2500 apps.py              # Django app configuration\n\u2502   \u251c\u2500\u2500 models.py            # Django models (empty)\n\u2502   \u251c\u2500\u2500 redis_utils.py       # Redis utility functions\n\u2502   \u251c\u2500\u2500 urls.py              # URL patterns\n\u2502   \u251c\u2500\u2500 views.py             # Django views\n\u2502   \u2514\u2500\u2500 templates/           # Django templates\n\u2502       \u2514\u2500\u2500 admin/\n\u2502           \u2514\u2500\u2500 dj_redis_panel/\n\u2502               \u251c\u2500\u2500 base.html\n\u2502               \u251c\u2500\u2500 index.html\n\u2502               \u251c\u2500\u2500 instance_overview.html\n\u2502               \u251c\u2500\u2500 key_detail.html\n\u2502               \u251c\u2500\u2500 key_search.html\n\u2502               \u2514\u2500\u2500 styles.css\n\u251c\u2500\u2500 example_project/         # Example Django project\n\u2502   \u251c\u2500\u2500 manage.py\n\u2502   \u2514\u2500\u2500 example_project/\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u251c\u2500\u2500 settings.py      # Django settings\n\u2502       \u251c\u2500\u2500 urls.py          # URL configuration\n\u2502       \u251c\u2500\u2500 wsgi.py\n\u2502       \u2514\u2500\u2500 management/      # Custom management commands\n\u2502           \u2514\u2500\u2500 commands/\n\u2502               \u2514\u2500\u2500 populate_redis.py\n\u251c\u2500\u2500 tests/                   # Test suite\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 base.py              # Test base classes\n\u2502   \u251c\u2500\u2500 conftest.py          # Pytest configuration\n\u2502   \u251c\u2500\u2500 test_index.py        # Index view tests\n\u2502   \u251c\u2500\u2500 test_instance_overview.py\n\u2502   \u251c\u2500\u2500 test_key_detail.py\n\u2502   \u2514\u2500\u2500 test_key_search.py\n\u251c\u2500\u2500 docs/                    # Documentation\n\u251c\u2500\u2500 images/                  # Screenshots for README\n\u251c\u2500\u2500 pyproject.toml          # Project configuration\n\u251c\u2500\u2500 requirements.txt        # Development dependencies\n\u251c\u2500\u2500 Makefile               # Development commands\n\u2514\u2500\u2500 README.md              # Project documentation\n</code></pre>"},{"location":"development/#example-project-setup","title":"Example Project Setup","text":"<p>The repository includes an example Django project for development and testing.</p>"},{"location":"development/#1-set-up-the-example-project","title":"1. Set Up the Example Project","text":"<pre><code>cd example_project\n\n# Run migrations (creates Django tables, not Redis Panel tables)\npython manage.py migrate\n\n# Create a superuser\npython manage.py createsuperuser\n</code></pre>"},{"location":"development/#2-populate-test-data","title":"2. Populate Test Data","text":"<pre><code># Populate Redis with sample data for testing\npython manage.py populate_redis\n</code></pre> <p>This command creates various types of Redis keys for testing: - String keys with different formats (JSON, plain text) - Hash keys with user profiles - List keys with notifications - Set keys with tags and permissions - Sorted set keys with leaderboards</p>"},{"location":"development/#3-run-the-development-server","title":"3. Run the Development Server","text":"<pre><code>python manage.py runserver\n</code></pre> <p>Visit <code>http://127.0.0.1:8000/admin/</code> to access the Django admin with Redis Panel.</p>"},{"location":"development/#documentation-development","title":"Documentation Development","text":""},{"location":"development/#building-documentation","title":"Building Documentation","text":"<p>The documentation is built with MkDocs:</p> <pre><code># Install documentation dependencies\npip install mkdocs mkdocs-material mkdocstrings[python]\n# Serve documentation locally\nmkdocs serve\n\n# Build documentation\nmkdocs build\n</code></pre>"},{"location":"development/#writing-documentation","title":"Writing Documentation","text":"<p>Documentation is written in Markdown and located in the <code>docs/</code> directory:</p> <ul> <li>Follow the existing structure and style</li> <li>Include code examples for new features</li> <li>Add screenshots for UI changes</li> <li>Update the navigation in <code>mkdocs.yml</code></li> </ul>"},{"location":"development/#getting-help","title":"Getting Help","text":""},{"location":"development/#development-questions","title":"Development Questions","text":"<ul> <li>GitHub Discussions: Project discussions</li> <li>Issues: Report bugs or request features</li> <li>Email: Contact maintainers directly for sensitive issues</li> </ul>"},{"location":"development/#resources","title":"Resources","text":"<ul> <li>Django Documentation: Django Project</li> <li>Redis Documentation: Redis Commands</li> <li>Python Packaging: PyPA Guides</li> <li>Testing: Pytest Documentation</li> </ul> <p>Thank you for contributing to Django Redis Panel! \ud83c\udf89</p>"},{"location":"features/","title":"Screenshots","text":"<p>This page showcases the Django Redis Panel interface with detailed screenshots of all major features.</p>"},{"location":"features/#django-admin-integration","title":"Django Admin Integration","text":"<p>Django Redis Panel integrates seamlessly into your existing Django admin interface. A new section for Redis management appears alongside your regular Django models.</p> <p>No Models Required</p> <p>This application doesn't introduce any Django models or require database migrations. It's purely a Redis management interface.</p> <p></p> <p>Features shown: - Clean integration with Django admin styling - Redis Panel section in the admin home - \"Manage Redis keys and values\" entry point</p>"},{"location":"features/#instance-list","title":"Instance List","text":"<p>The main landing page shows all configured Redis instances with their connection status and basic information.</p> <p></p> <p>Features shown: - Multiple Redis instance support - Connection status indicators - Instance descriptions and connection details - Quick access to instance management</p>"},{"location":"features/#instance-overview","title":"Instance Overview","text":"<p>Each Redis instance has a detailed overview page showing server information, database statistics, and quick navigation options.</p> <p></p> <p>Features shown: - Server information (version, uptime, memory usage) - Database statistics with key counts - Memory usage per database - Quick links to browse keys in specific databases - Real-time connection status</p>"},{"location":"features/#key-search-page-based-pagination","title":"Key Search - Page-Based Pagination","text":"<p>The key search interface supports traditional page-based navigation, perfect for smaller datasets and when you need predictable page jumping.</p> <p></p> <p>Features shown: - Search pattern input with examples - Database selection dropdown - Traditional pagination with page numbers - Key type indicators - Results per page selection - Total key count display</p>"},{"location":"features/#key-search-cursor-based-pagination","title":"Key Search - Cursor-Based Pagination","text":"<p>For larger datasets, cursor-based pagination provides better performance and stability during data changes.</p> <p></p> <p>Features shown: - Efficient cursor-based navigation - Next/Previous controls - Stable pagination during key modifications - Better performance with large key sets - Same search and filtering capabilities</p>"},{"location":"features/#key-detail-string-values","title":"Key Detail - String Values","text":"<p>String keys are displayed with syntax highlighting and full editing capabilities.</p> <p></p> <p>Features shown: - Key information panel (name, type, TTL, size) - Formatted value display with syntax highlighting - Edit functionality with large text area - TTL management controls - Delete confirmation - JSON/XML automatic formatting</p>"},{"location":"features/#key-detail-complex-data-structures","title":"Key Detail - Complex Data Structures","text":"<p>Complex Redis data types like hashes are displayed in an organized, tabular format for easy browsing.</p> <p></p> <p>Features shown: - Hash fields displayed in a clean table format - Field names and values clearly separated - Pagination for large hashes - Key metadata (type, field count, memory usage) - Consistent interface design</p>"},{"location":"features/#interface-highlights","title":"Interface Highlights","text":""},{"location":"features/#design-consistency","title":"Design Consistency","text":"<p>All interfaces maintain consistency with Django's admin theme:</p> <ul> <li>Color Scheme: Matches Django admin colors and styling</li> <li>Typography: Uses Django's font stack and sizing</li> <li>Navigation: Familiar breadcrumb and navigation patterns</li> <li>Forms: Standard Django form styling and validation</li> </ul>"},{"location":"features/#dark-mode-support","title":"Dark Mode Support","text":"<p>Django Redis Panel automatically adapts to Django admin's dark mode:</p> <ul> <li>Automatic Detection: Follows Django admin theme preferences</li> <li>Consistent Theming: All components support both light and dark modes</li> <li>Accessibility: Maintains proper contrast ratios in both modes</li> </ul>"},{"location":"features/#responsive-design","title":"Responsive Design","text":"<p>The interface works well across different screen sizes:</p> <ul> <li>Mobile Friendly: Touch-friendly interface elements</li> <li>Tablet Optimized: Efficient use of screen space</li> <li>Desktop Enhanced: Full feature set on larger screens</li> </ul>"},{"location":"features/#user-experience-features","title":"User Experience Features","text":""},{"location":"features/#visual-feedback","title":"Visual Feedback","text":"<ul> <li>Loading States: Clear indicators during operations</li> <li>Success Messages: Confirmation of successful actions</li> <li>Error Handling: Clear error messages with helpful suggestions</li> </ul>"},{"location":"features/#navigation-aids","title":"Navigation Aids","text":"<ul> <li>Breadcrumbs: Always know where you are</li> <li>Quick Links: Fast navigation between related pages</li> <li>Search History: Remember recent search patterns</li> </ul>"},{"location":"features/#data-presentation","title":"Data Presentation","text":"<ul> <li>Syntax Highlighting: JSON, XML, and other formats are highlighted</li> <li>Data Formatting: Automatic formatting for better readability</li> <li>Truncation: Long values are intelligently truncated with expand options</li> </ul>"},{"location":"features/#accessibility-features","title":"Accessibility Features","text":""},{"location":"features/#screen-reader-support","title":"Screen Reader Support","text":"<ul> <li>Semantic HTML: Proper heading structure and landmarks</li> <li>Alt Text: Descriptive text for all images and icons</li> <li>ARIA Labels: Enhanced accessibility for interactive elements</li> </ul>"},{"location":"features/#keyboard-navigation","title":"Keyboard Navigation","text":"<ul> <li>Tab Order: Logical tab sequence through all interface elements</li> <li>Keyboard Shortcuts: Quick access to common functions</li> <li>Focus Indicators: Clear visual focus indicators</li> </ul>"},{"location":"features/#color-and-contrast","title":"Color and Contrast","text":"<ul> <li>High Contrast: Meets WCAG AA standards</li> <li>Color Independence: Information not conveyed by color alone</li> <li>Customizable: Respects system accessibility preferences</li> </ul>"},{"location":"features/#browser-compatibility","title":"Browser Compatibility","text":"<p>Django Redis Panel works across all modern browsers:</p> <ul> <li>Chrome/Chromium: Full feature support</li> <li>Firefox: Complete compatibility</li> <li>Safari: Native macOS/iOS experience</li> <li>Edge: Modern Edge (Chromium-based) support</li> </ul>"},{"location":"features/#mobile-experience","title":"Mobile Experience","text":"<p>While primarily designed for desktop use, the interface is mobile-friendly:</p> <ul> <li>Touch Targets: Appropriately sized for touch interaction</li> <li>Scrolling: Smooth scrolling and navigation</li> <li>Viewport: Proper mobile viewport configuration</li> <li>Performance: Optimized for mobile network conditions</li> </ul>"},{"location":"features/#performance-considerations","title":"Performance Considerations","text":"<p>The interface is optimized for performance:</p> <ul> <li>Lazy Loading: Key values loaded on demand</li> <li>Efficient Pagination: Minimal server round trips</li> <li>Caching: Appropriate caching of static resources</li> <li>Compression: Optimized asset delivery</li> </ul>"},{"location":"features/#customization-options","title":"Customization Options","text":"<p>While maintaining Django admin consistency, some customization is possible:</p> <ul> <li>CSS Overrides: Custom styling through Django's static files</li> <li>Template Extensions: Extend templates for additional functionality</li> <li>Theme Integration: Works with Django admin theme packages</li> </ul>"},{"location":"features/#getting-the-most-from-the-interface","title":"Getting the Most from the Interface","text":""},{"location":"features/#pro-tips","title":"Pro Tips","text":"<ol> <li>Use Specific Patterns: Instead of <code>*</code>, use patterns like <code>user:*</code> for better performance</li> <li>Database Selection: Use the database dropdown to narrow your search scope</li> <li>Cursor Pagination: Enable for large datasets in your configuration</li> <li>Keyboard Shortcuts: Learn the tab navigation for faster operation</li> </ol>"},{"location":"features/#best-practices","title":"Best Practices","text":"<ol> <li>Test in Development: Always test destructive operations in a safe environment</li> <li>Use Read-Only Mode: Configure read-only access for production viewing</li> <li>Monitor Performance: Watch Redis performance when browsing large datasets</li> <li>Regular Backups: Ensure proper Redis backup procedures before making changes</li> </ol> <p>The screenshots above represent the current version of Django Redis Panel. The interface continues to evolve with new features and improvements in each release.</p>"},{"location":"installation/","title":"Installation","text":"<p>This guide will walk you through installing and setting up Django Redis Panel in your Django project.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<p>Before installing Django Redis Panel, make sure you have:</p> <ul> <li>Python 3.9 or higher</li> <li>Django 4.2 or higher</li> <li>A running Redis server</li> <li>redis-py 4.0 or higher</li> </ul>"},{"location":"installation/#installation-steps","title":"Installation Steps","text":""},{"location":"installation/#1-install-the-package","title":"1. Install the Package","text":"<p>Install Django Redis Panel using pip:</p> <pre><code>pip install dj-redis-panel\n</code></pre>"},{"location":"installation/#2-add-to-django-settings","title":"2. Add to Django Settings","text":"<p>Add <code>dj_redis_panel</code> to your <code>INSTALLED_APPS</code> in your Django settings file:</p> <pre><code># settings.py\nINSTALLED_APPS = [\n'django.contrib.admin',\n'django.contrib.auth',\n'django.contrib.contenttypes',\n'django.contrib.sessions',\n'django.contrib.messages',\n'django.contrib.staticfiles',\n'dj_redis_panel',  # Add this line\n# ... your other apps\n]\n</code></pre> <p>Note</p> <p>Django Redis Panel doesn't require any database migrations as it doesn't define any Django models.</p>"},{"location":"installation/#3-configure-redis-instances","title":"3. Configure Redis Instances","text":"<p>Add your Redis configuration to your Django settings:</p> Single InstanceMultiple InstancesWith Authentication <pre><code># settings.py\nDJ_REDIS_PANEL_SETTINGS = {\n\"INSTANCES\": {\n\"default\": {\n\"description\": \"Default Redis Instance\",\n\"host\": \"127.0.0.1\",\n\"port\": 6379,\n}\n}\n}\n</code></pre> <pre><code># settings.py\nDJ_REDIS_PANEL_SETTINGS = {\n\"INSTANCES\": {\n\"default\": {\n\"description\": \"Default Redis Instance\",\n\"host\": \"127.0.0.1\",\n\"port\": 6379,\n},\n\"cache\": {\n\"description\": \"Cache Redis Instance\",\n\"host\": \"127.0.0.1\",\n\"port\": 6379,\n},\n\"sessions\": {\n\"description\": \"Session Store\",\n\"url\": \"redis://127.0.0.1:6379\",\n}\n}\n}\n</code></pre> <pre><code># settings.py\nDJ_REDIS_PANEL_SETTINGS = {\n\"INSTANCES\": {\n\"secure\": {\n\"description\": \"Secure Redis Instance\",\n\"host\": \"127.0.0.1\",\n\"port\": 6379,\n\"password\": \"your-redis-password\",\n},\n\"ssl_instance\": {\n\"description\": \"SSL Redis Instance\",\n\"url\": \"rediss://user:password@host:6380\",\n}\n}\n}\n</code></pre>"},{"location":"installation/#4-include-urls","title":"4. Include URLs","text":"<p>Add the Django Redis Panel URLs to your main <code>urls.py</code> file:</p> <pre><code># urls.py\nfrom django.contrib import admin\nfrom django.urls import path, include\nurlpatterns = [\npath('admin/redis/', include('dj_redis_panel.urls')),  # Add this line\npath('admin/', admin.site.urls),\n]\n</code></pre> <p>Tip</p> <p>You can change the URL path from <code>admin/redis/</code> to any path you prefer, such as <code>redis/</code> or <code>db/redis/</code>.</p>"},{"location":"installation/#5-create-admin-user-if-needed","title":"5. Create Admin User (if needed)","text":"<p>If you don't already have a Django admin superuser, create one:</p> <pre><code>python manage.py createsuperuser\n</code></pre>"},{"location":"installation/#6-start-the-development-server","title":"6. Start the Development Server","text":"<p>Start your Django development server:</p> <pre><code>python manage.py runserver\n</code></pre>"},{"location":"installation/#7-access-the-panel","title":"7. Access the Panel","text":"<ol> <li>Navigate to the Django admin at <code>http://127.0.0.1:8000/admin/</code></li> <li>Log in with your admin credentials</li> <li>Look for the \"DJ_REDIS_PANEL\" section in the admin interface</li> <li>Click \"Manage Redis keys and values\" to start browsing your Redis instances</li> </ol>"},{"location":"installation/#verification","title":"Verification","text":"<p>To verify that everything is working correctly:</p> <ol> <li>Check that you can see the Redis Panel section in your Django admin</li> <li>Click on \"Manage Redis keys and values\"</li> <li>You should see a list of your configured Redis instances</li> <li>Click on an instance to view its overview and browse keys</li> </ol>"},{"location":"installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/#common-issues","title":"Common Issues","text":"<p>Redis connection errors : Make sure your Redis server is running and accessible at the configured host and port.</p> <p>Permission denied : Ensure you're logged in as a staff user with admin access.</p> <p>Module not found : Make sure <code>dj_redis_panel</code> is properly installed and added to <code>INSTALLED_APPS</code>.</p> <p>URLs not found : Verify that you've included the Redis Panel URLs in your main <code>urls.py</code> file.</p>"},{"location":"installation/#getting-help","title":"Getting Help","text":"<p>If you encounter any issues during installation:</p> <ul> <li>Check the Configuration guide for detailed settings</li> <li>Review the Quick Start guide</li> <li>Open an issue on GitHub</li> </ul>"},{"location":"installation/#next-steps","title":"Next Steps","text":"<p>Now that you have Django Redis Panel installed, learn how to:</p> <ul> <li>Configure advanced settings</li> <li>Follow the quick start guide</li> <li>Explore all features</li> </ul>"},{"location":"quick-start/","title":"Quick Start Guide","text":"<p>This guide will get you up and running with Django Redis Panel in just a few minutes.</p>"},{"location":"quick-start/#prerequisites","title":"Prerequisites","text":"<p>Before starting, make sure you have:</p> <ul> <li>\u2705 Django Redis Panel installed</li> <li>\u2705 A running Redis server</li> <li>\u2705 Django admin access</li> </ul>"},{"location":"quick-start/#step-1-access-the-admin-panel","title":"Step 1: Access the Admin Panel","text":"<ol> <li> <p>Start your Django development server:    <pre><code>python manage.py runserver\n</code></pre></p> </li> <li> <p>Navigate to your Django admin interface:    <pre><code>http://127.0.0.1:8000/admin/\n</code></pre></p> </li> <li> <p>Log in with your admin credentials</p> </li> <li> <p>Look for the \"DJ_REDIS_PANEL\" section in the admin home page</p> </li> </ol>"},{"location":"quick-start/#step-2-explore-your-redis-instances","title":"Step 2: Explore Your Redis Instances","text":"<ol> <li> <p>Click on \"Manage Redis keys and values\"</p> </li> <li> <p>You'll see a list of your configured Redis instances with their status:</p> </li> <li>\ud83d\udfe2 Connected: Instance is accessible</li> <li> <p>\ud83d\udd34 Error: Connection failed</p> </li> <li> <p>Click on any instance to view its overview</p> </li> </ol>"},{"location":"quick-start/#step-3-instance-overview","title":"Step 3: Instance Overview","text":"<p>The instance overview page shows:</p> <ul> <li>Connection Info: Host, port, database number</li> <li>Server Info: Redis version, uptime, memory usage</li> <li>Database Stats: Total keys, expires, memory usage per database</li> <li>Quick Actions: Direct links to browse keys</li> </ul> <p></p>"},{"location":"quick-start/#step-4-browse-redis-keys","title":"Step 4: Browse Redis Keys","text":"<ol> <li> <p>From the instance overview, click \"Browse Keys\" or navigate to the key search page</p> </li> <li> <p>You'll see the key browser with:</p> </li> <li>Search box: Enter patterns like <code>user:*</code> or <code>session:*</code></li> <li>Database selector: Switch between Redis databases</li> <li>Pagination controls: Navigate through results</li> </ol> <p></p>"},{"location":"quick-start/#search-examples","title":"Search Examples","text":"<p>Try these search patterns:</p> <ul> <li><code>*</code> - Show all keys</li> <li><code>user:*</code> - All keys starting with \"user:\"</li> <li><code>*session*</code> - All keys containing \"session\"</li> <li><code>cache:user:*</code> - Nested pattern matching</li> </ul>"},{"location":"quick-start/#step-5-inspect-key-details","title":"Step 5: Inspect Key Details","text":"<ol> <li> <p>Click on any key from the search results</p> </li> <li> <p>The key detail page shows:</p> </li> <li>Key information: Name, type, TTL, size</li> <li>Value display: Formatted based on data type</li> <li>Actions: Edit, delete, update TTL (if enabled)</li> </ol> <p></p>"},{"location":"quick-start/#data-type-examples","title":"Data Type Examples","text":"StringHashListSet <p>Simple text values with edit capability <pre><code>Key: user:1:name\nValue: \"John Doe\"\n</code></pre></p> <p>Field-value pairs displayed in a table <pre><code>Key: user:1:profile\nFields:\n- name: \"John Doe\"\n- email: \"john@example.com\"\n- age: \"30\"\n</code></pre></p> <p>Ordered list of values with pagination <pre><code>Key: user:1:notifications\nItems:\n0: \"Welcome message\"\n1: \"New feature available\"\n</code></pre></p> <p>Unique values in no particular order <pre><code>Key: user:1:tags\nMembers:\n- \"premium\"\n- \"verified\"\n- \"active\"\n</code></pre></p>"},{"location":"quick-start/#step-6-key-management-optional","title":"Step 6: Key Management (Optional)","text":"<p>If key editing is enabled in your configuration, you can:</p>"},{"location":"quick-start/#edit-key-values","title":"Edit Key Values","text":"<ol> <li>Click the \"Edit\" button on a key detail page</li> <li>Modify the value in the text area</li> <li>Click \"Save\" to update the key</li> </ol>"},{"location":"quick-start/#update-ttl-time-to-live","title":"Update TTL (Time To Live)","text":"<ol> <li>Use the TTL controls to set expiration</li> <li>Options include:</li> <li>Set specific expiration time</li> <li>Set seconds/minutes/hours from now</li> <li>Remove expiration (make key persistent)</li> </ol>"},{"location":"quick-start/#delete-keys","title":"Delete Keys","text":"<p>Destructive Operation</p> <p>Key deletion is permanent and cannot be undone. Use with caution.</p> <ol> <li>Click the \"Delete\" button</li> <li>Confirm the deletion in the popup</li> <li>The key will be permanently removed from Redis</li> </ol>"},{"location":"quick-start/#common-workflows","title":"Common Workflows","text":""},{"location":"quick-start/#debugging-application-issues","title":"Debugging Application Issues","text":"<ol> <li> <p>Search for user-specific keys:    <pre><code>user:123:*\n</code></pre></p> </li> <li> <p>Check session data:    <pre><code>session:*\n</code></pre></p> </li> <li> <p>Inspect cache entries:    <pre><code>cache:*\n</code></pre></p> </li> </ol>"},{"location":"quick-start/#cache-management","title":"Cache Management","text":"<ol> <li> <p>Find all cache keys:    <pre><code>cache:*\n</code></pre></p> </li> <li> <p>Check cache hit rates in instance overview</p> </li> <li> <p>Clear specific cache entries by deleting keys</p> </li> </ol>"},{"location":"quick-start/#session-debugging","title":"Session Debugging","text":"<ol> <li> <p>Find user sessions:    <pre><code>session:*\n</code></pre></p> </li> <li> <p>Inspect session data to debug login issues</p> </li> <li> <p>Remove problematic sessions if needed</p> </li> </ol>"},{"location":"quick-start/#tips-and-best-practices","title":"Tips and Best Practices","text":""},{"location":"quick-start/#search-efficiency","title":"Search Efficiency","text":"<ul> <li>Use specific patterns instead of <code>*</code> for large datasets</li> <li>Enable cursor-based pagination for better performance</li> <li>Use database selection to narrow down results</li> </ul>"},{"location":"quick-start/#safety","title":"Safety","text":"<ul> <li>Always verify key contents before deletion</li> <li>Use read-only mode in production environments</li> <li>Test configuration changes in development first</li> </ul>"},{"location":"quick-start/#performance","title":"Performance","text":"<ul> <li>Enable cursor pagination for large key sets</li> <li>Use specific search patterns to reduce result sets</li> <li>Monitor Redis memory usage in instance overview</li> </ul>"},{"location":"quick-start/#troubleshooting","title":"Troubleshooting","text":""},{"location":"quick-start/#cant-see-redis-panel-in-admin","title":"Can't see Redis Panel in admin","text":"<ul> <li>Verify <code>dj_redis_panel</code> is in <code>INSTALLED_APPS</code></li> <li>Check that you're logged in as a staff user</li> <li>Ensure URLs are properly configured</li> </ul>"},{"location":"quick-start/#connection-errors","title":"Connection errors","text":"<ul> <li>Verify Redis server is running</li> <li>Check host, port, and credentials in configuration</li> <li>Test Redis connection outside of Django</li> </ul>"},{"location":"quick-start/#no-keys-visible","title":"No keys visible","text":"<ul> <li>Verify you're looking in the correct database</li> <li>Check if Redis instance actually contains data</li> <li>Try using <code>*</code> pattern to show all keys</li> </ul>"},{"location":"quick-start/#next-steps","title":"Next Steps","text":"<p>Now that you're familiar with the basics:</p> <ul> <li>Explore all features in detail</li> <li>Learn about configuration options</li> <li>View screenshots of all interfaces</li> <li>Understand Redis data types support</li> </ul>"},{"location":"testing/","title":"Testing","text":"<p>Django Redis Panel includes a comprehensive test suite to ensure reliability and prevent regressions. This guide covers running tests, writing new tests, and understanding the testing infrastructure.</p>"},{"location":"testing/#test-overview","title":"Test Overview","text":""},{"location":"testing/#test-structure","title":"Test Structure","text":"<p>The test suite is organized in the <code>tests/</code> directory:</p> <pre><code>tests/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 base.py                 # Base test classes\n\u251c\u2500\u2500 conftest.py            # Pytest configuration\n\u251c\u2500\u2500 test_index.py          # Index view tests\n\u251c\u2500\u2500 test_instance_overview.py  # Instance overview tests\n\u251c\u2500\u2500 test_key_detail.py     # Key detail view tests\n\u2514\u2500\u2500 test_key_search.py     # Key search tests\n</code></pre>"},{"location":"testing/#test-types","title":"Test Types","text":"<ul> <li>View Tests: Most test are created as functional tests that are directly calling views.</li> </ul>"},{"location":"testing/#running-tests","title":"Running Tests","text":""},{"location":"testing/#prerequisites","title":"Prerequisites","text":"<p>Before running tests, ensure you have:</p> <ul> <li>Redis server running on <code>127.0.0.1:6379</code> - consider running <code>docker compose up redis -d</code></li> <li>Test databases 13, 14, and 15 available</li> <li>Development dependencies run <code>make install_dev</code></li> </ul>"},{"location":"testing/#quick-test-commands","title":"Quick Test Commands","text":"<pre><code># Run all tests\nmake test\n# Run with coverage report\nmake test-coverage\n\n# Run specific test file\npytest tests/test_views.py\n\n# Run tests in parallel\npytest -n auto\n</code></pre>"},{"location":"testing/#detailed-test-commands","title":"Detailed Test Commands","text":"<pre><code># Run tests with specific markers\npytest -m \"not slow\"\n# Run tests matching pattern\npytest -k \"test_key_detail\"\n# Run tests with debugging\npytest --pdb\n\n# Run tests with coverage and HTML report\npytest --cov=dj_redis_panel --cov-report=html\n\n# Run tests with timing information\npytest --durations=10\n</code></pre>"},{"location":"testing/#test-configuration","title":"Test Configuration","text":""},{"location":"testing/#pytest-configuration","title":"Pytest Configuration","text":"<p>Tests are configured in <code>pytest.ini</code>:</p> <pre><code>[tool:pytest]\nDJANGO_SETTINGS_MODULE = example_project.settings\ntestpaths = tests\naddopts = --tb=short --strict-markers\nmarkers =\nslow: marks tests as slow (deselect with '-m \"not slow\"')\n</code></pre>"},{"location":"testing/#django-test-settings","title":"Django Test Settings","text":"<p>The example project includes test-specific settings that are useful for manual testing</p> <pre><code># example_project/settings.py\nDATABASES = {\n'default': {\n'ENGINE': 'django.db.backends.sqlite3',\n'NAME': ':memory:',  # In-memory database for tests\n}\n}\n# Redis test configuration\nDJ_REDIS_PANEL_SETTINGS = {\n\"INSTANCES\": {\n\"test\": {\n\"description\": \"Test Redis Instance\",\n\"host\": \"127.0.0.1\",\n\"port\": 6379,\n\"db\": 13,  # Use database 13 for tests\n}\n}\n}\n</code></pre>"},{"location":"testing/#test-database-setup","title":"Test Database Setup","text":"<p>Tests use Redis databases 13, 14, and 15 to avoid interfering with development data:</p> <ul> <li>Database 13: Primary test database</li> <li>Database 14: Secondary test database for multi-instance tests</li> <li>Database 15: Reserved for special test cases</li> </ul>"},{"location":"testing/#manual-testing","title":"Manual Testing","text":"<p>For manually testing dj-redis-panel, a cli utiliy has been created in order to easily create sample data in a redis instance. For safety reasons, this utility is part of the example project within the repo and not directly part of the dj-redis-panel package.</p> <pre><code># run from the example project directory\npython manage.py populate redis\n</code></pre>"}]}